name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    # ensure the project builds correctly for the same Node.js
    # and Bun versions as used in Cloudflare production Build
    # system version Version 3: Node.js 22.16, Bun 1.2
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Bun 1.x
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run type checking
        run: bun run typecheck

      - name: Build site
        run: bun run build
        env:
          NODE_ENV: production


  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Bun 1.x
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check Prettier formatting
        run: |
          if command -v prettier &> /dev/null || [ -f "node_modules/.bin/prettier" ]; then
            echo "Checking code formatting with Prettier..."
            bunx prettier --check "**/*.{js,jsx,ts,tsx,md,json,yml,yaml}" || {
              echo "❌ Code formatting issues found. Run 'bunx prettier --write .' to fix."
              exit 1
            }
            echo "✅ All files are properly formatted"
          else
            echo "⚠️  Prettier not configured - skipping format check"
          fi

      - name: Run ESLint
        run: |
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f "eslint.config.js" ] || [ -f "node_modules/.bin/eslint" ]; then
            echo "Running ESLint..."
            bunx eslint . --ext .js,.jsx,.ts,.tsx || {
              echo "❌ ESLint issues found. Run 'bunx eslint . --fix' to fix auto-fixable issues."
              exit 1
            }
            echo "✅ No ESLint issues found"
          else
            echo "⚠️  ESLint not configured - skipping lint check"
          fi

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Bun 1.x
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2'

      - name: Run security audit
        run: |
          echo "Running security audit..."
          if bun audit --help &>/dev/null; then
            bun audit
          else
            echo "Using npm audit as fallback..."
            npm audit --audit-level moderate
          fi
